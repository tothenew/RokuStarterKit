' ----------------------------------------------------------------
REM : This component contains some configuration & focus handling related code for Player Screen
' ----------------------------------------------------------------

' ----------------------------------------------------------------
REM : All UI components are being intialized here
' ----------------------------------------------------------------
sub init()
    m.top.setFocus(true)
    bindViewModel()
end sub

sub bindViewModel()
    m.viewModel = new PlayerViewModel()
end sub

sub OnVideoPlayerStateChange()
    m.viewModel.playerStateChanged(m.videoPlayer.state)
end sub

sub onArgsReceived()
    args = m.top.args
    if m.top.args.videoScreenData <> invalid
        onVideoScreenDataReceived()
    end if
end sub

sub playbackErrorReceived()
    if m.viewModel.playerError = true
        m.showError("Error!", "Something went wrong, please try again.")
    end if
end sub

' ----------------------------------------------------------------
REM : This method takes useer to Movie Screen
' ----------------------------------------------------------------
sub goBackToHomeScreen()
    if m.videoPlayer <> invalid
        m.videoPlayer.unobserveField("state")
        m.videoPlayer.control = "stop"
        m.videoPlayer = invalid
    end if
    m.PlayerTask = invalid
    m.top.removePlayerScreen = true
end sub

' ----------------------------------------------------------------
REM : This method presents error dialog
' ----------------------------------------------------------------
sub showError(errorTitle as string, errorMessage as string)
    m.top.getScene().errorTitle = errorTitle
    m.top.getScene().errorMessage = errorMessage
    m.top.getScene().showErrorDialog = true
end sub

' ----------------------------------------------------------------
REM : This method validates video url and configures video accordingly
' ----------------------------------------------------------------
sub onVideoScreenDataReceived()
    args = m.top.args
    if args.videoScreenData.streamURL <> invalid and args.videoScreenData.streamURL.Len() <> 0
        confgureVideo()
    else
        showError("Video Url not found", "This video is not available")
    end if
end sub

' ----------------------------------------------------------------
REM : Video is configured and streamed in this method
' ----------------------------------------------------------------
sub confgureVideo()
    if m.videoPlayer <> invalid
        if m.videoPlayer.state = "playing" or m.videoPlayer.state = "buffering" or m.videoPlayer.state = "paused"
            m.videoPlayer.control = "stop"
            m.videoPlayer = invalid
        end if
    end if
    m.videoPlayer = m.top.findNode("videoPlayer")
    m.videoPlayer.observeField("state", "OnVideoPlayerStateChange")

    videoContentData = m.viewModel.getVideoData(m.top.args.videoScreenData)

    ' compile into a VideoContent node
    content = CreateObject("roSGNode", "VideoContent")
    content.setFields(videoContentData)
    content.ad_url = "" 'Leaving it blank for this app. You should pass your url for live app

    m.videoPlayer.content = content
    m.videoPlayer.visible = false

    m.PlayerTask = CreateObject("roSGNode", "PlayerTask")
    m.PlayerTask.observeField("state", "taskStateChanged")
    m.PlayerTask.video = m.videoPlayer
    m.PlayerTask.control = "RUN"
    'm.videoPlayer.control = "play"
    'm.videoPlayer.setFocus(true)
end sub

' ----------------------------------------------------------------
REM : This method gets called whenever state of video player is changed
' ----------------------------------------------------------------
sub taskStateChanged(event as object)
    print "Player: taskStateChanged(), id = "; event.getNode(); ", "; event.getField(); " = "; event.getData()
    state = event.GetData()
    if state = "done" or state = "stop"
        goBackToHomeScreen()
    end if
end sub

' ----------------------------------------------------------------
REM : This method gets called when any remote key is pressed at Player Screen
' ----------------------------------------------------------------
function onKeyEvent(key as string, press as boolean) as boolean
    result = true
    if press
        if key = "back"
            goBackToHomeScreen()
        end if
    end if
    return result
end function
